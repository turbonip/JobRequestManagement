# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/jobmanagement?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username = root
spring.datasource.password = 
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update*)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jackson.serialization.fail-on-empty-beans=false

spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

spring.thymeleaf.cache=false
spring.freemarker.cache=false
spring.http.encoding.charset=UTF-8
# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.enabled=true
# Enable http encoding support.
spring.http.encoding.force=true
# Force the encoding to the configured charset on HTTP requests and responses.
#LOG
#logging.path=C:/out